{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Itai\\\\Desktop\\\\node-server\\\\crwn-clothing\\\\src\\\\components\\\\login\\\\login.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { auth, loginWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport './login.styles.scss';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.setState({\n        email: '',\n        password: ''\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      className: \"sub-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Login with your email and password\"), React.createElement(\"form\", {\n      action: \"\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      label: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      label: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Login\"), React.createElement(CustomButton, {\n      onClick: googleSignInStart,\n      isGoogle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Login with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/Itai/Desktop/node-server/crwn-clothing/src/components/login/login.component.jsx"],"names":["React","FormInput","CustomButton","connect","auth","loginWithGoogle","googleSignInStart","Login","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","error","console","log","setState","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { auth, loginWithGoogle } from '../../firebase/firebase.utils';\r\nimport { googleSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport './login.styles.scss';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    const { email, password } = this.state;\r\n    try {\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    this.setState({ email: '', password: '' });\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { value, name } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n\trender() {\r\n\t\tconst { googleSignInStart } = this.props;\r\n    return (\r\n      <div className='login'>\r\n        <h2 className='title'>I already have an account</h2>\r\n        <span className='sub-title'>Login with your email and password</span>\r\n\r\n        <form action='' onSubmit={this.handleSubmit}>\r\n          <FormInput\r\n            type='email'\r\n            name='email'\r\n            label='email'\r\n            value={this.state.email}\r\n            handleChange={this.handleChange}\r\n            required\r\n          />\r\n          <FormInput\r\n            type='password'\r\n            label='password'\r\n            name='password'\r\n            value={this.state.password}\r\n            handleChange={this.handleChange}\r\n            required\r\n          />\r\n          <div className='buttons'>\r\n            <CustomButton type='submit'>Login</CustomButton>\r\n            <CustomButton onClick={googleSignInStart} isGoogle>\r\n              Login with Google\r\n            </CustomButton>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}